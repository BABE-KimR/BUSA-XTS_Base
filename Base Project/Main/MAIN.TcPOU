<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="MAIN" Id="{0790caa7-8a3f-4f91-b0f8-9ebb3db3858d}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	

	// helper, state, index variables
	i						: UINT;
	n						: UINT;
	MainState				: UINT;
	
	StationTimer			: ARRAY [0..GVL.NUM_STATIONS] OF TON;
	nextStation				: USINT := 8;
	
	bInitialMovement		: BOOL;
	
	lowVelocity				: LREAL := 200; // mm/s
	mediumVelocity			: LREAL := 800;	// mm/s
	highVelocity			: LREAL := 2000; // mm/s
	
	// linked NC handles
	GroupRef				: AXES_GROUP_REF;
	Mover					: ARRAY [0..GVL.NUM_MOVERS-1] OF Mover;
	
	ParameterSet			: MoverParameters_typ;
	IndexParSet				: MoverParameters_typ;
	TravelParSet			: MoverParameters_typ;
	
	// Objectives & Parameters
	
	// Todo initialize this in the code with the prop Setter, not by addressing an internal variable
	Station					: ARRAY [0..GVL.NUM_STATIONS-1] OF Station;		
	//PositionTrigger			: ARRAY [0..1] OF PositionTrigger;		
	//SpeedTrigger			: ARRAY [0..0] OF SpeedTrigger;
	
	
	
	// User commands									
	bCommandEnable			: BOOL;	
		
	allMoversAtFirst: BOOL;
	allMoversAtSecond: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[

CASE MainState OF
	0:	// -------------------------------------------- Idle state
	
		IF bCommandEnable THEN
			MainState		:= 10;
		END_IF
		
	10: // -------------------------------------------- Init Stations, Position Triggers
	
		Station[0].TrackPosition			:= 3300; 
		Station[1].TrackPosition			:= 3220; 
		Station[2].TrackPosition			:= 3140;
		Station[3].TrackPosition			:= 3060;
		Station[4].TrackPosition			:= 2980;
		Station[5].TrackPosition			:= 2900;
		Station[6].TrackPosition			:= 2820;
		Station[7].TrackPosition			:= 2740;
			
		Station[8].TrackPosition			:= 2600;
		Station[9].TrackPosition			:= 2520;
		Station[10].TrackPosition			:= 2440;
		Station[11].TrackPosition			:= 2360;
		Station[12].TrackPosition			:= 2280;
		Station[13].TrackPosition			:= 2200;
		Station[14].TrackPosition			:= 2120;
		Station[15].TrackPosition			:= 2040;
		
		Station[16].TrackPosition			:= 1500;
			
		MainState		:= 20;
		
	20:	// -------------------------------------------- Begin Enable all Movers
	
		// todo: could make this more parallel
		Mover[n].Enable		:= TRUE;
		IF Mover[n].Ready THEN
			n	:= n+1;
		END_IF;
		
		IF n = GVL.NUM_MOVERS THEN
			n				:= 0;
			MainState		:= 30;		
		END_IF
	
	30:	// -------------------------------------------- Set all motion parameters
	
		FOR i := 0 TO GVL.NUM_MOVERS-1 DO
			ParameterSet.Gap					:= 90;
			ParameterSet.Jerk					:= 1E4;
			ParameterSet.Acceleration			:= 1E4;		// mm/s2
			ParameterSet.Deceleration			:= 1E4;		// mm/s2
			ParameterSet.Direction				:= mcDirectionPositive;
			ParameterSet.Velocity				:= 1E3;		// mm/s
			
			IndexParSet.Gap						:= 70;
			IndexParSet.Jerk					:= 80000;
			IndexParSet.Acceleration			:= 30000;
			IndexParSet.Deceleration			:= 30000;
			IndexParSet.Direction				:= mcDirectionPositive;
			IndexParSet.Velocity				:= 4000;
		
			TravelParSet.Gap					:= 75;
			TravelParSet.Jerk					:= 1E4;
			TravelParSet.Acceleration			:= 1E3;
			TravelParSet.Deceleration			:= 1E3;
			TravelParSet.Direction				:= mcDirectionPositive;
			TravelParSet.Velocity				:= 1E3;

			Mover[i].MotionParameters			:= TravelParSet;
		END_FOR
		
		bInitialMovement	:= TRUE;
		MainState			:= 40;
	
	40:	// -------------------------------------------- Ready for commands
	
		// Move all shuttles to specified stations
		IF bInitialMovement THEN
			FOR i := 0 TO GVL.NUM_MOVERS-1 DO
				Mover[i].MoveToStation( Station[16] );
			END_FOR
			bInitialMovement	:= FALSE;
		END_IF
		
		// ============================================ Example traffic logic below
		
		
		// Station 16 Logic
		IF Station[16].MoverInPosition THEN			
			Station[16].CurrentMover.MoveToStation( Station[nextStation] );
			nextStation	:= nextStation + 1;
			
			IF nextStation = 16 THEN
				nextStation	:= 8;
			END_IF		
		END_IF
		
		// Full group parked at buffer station
		allMoversAtFirst		:= TRUE;
		FOR i := 8 TO 15 DO
			IF Station[i].MoverInPosition = FALSE THEN
				allMoversAtFirst		:= FALSE;
			END_IF
		END_FOR		
		
		// First Stations logic
		IF allMoversAtFirst THEN
			StationTimer[8]( IN := TRUE, PT := T#1000MS );
			
			IF StationTimer[8].Q THEN
				StationTimer[8] ( IN := FALSE );
				
				// Dwell complete, release all shuttles
				
				FOR i := 8 TO 15 DO
					Station[i].CurrentMover.MotionParameters	:= IndexParSet;
					Station[i].CurrentMover.MoveToStation( Station[i-8] );
				END_FOR				
				
			END_IF
		END_IF
		
		
		// Full group parked at operation station
		allMoversAtSecond		:= TRUE;
		FOR i := 0 TO 7 DO
			IF Station[i].MoverInPosition = FALSE THEN
				allMoversAtSecond		:= FALSE;
			END_IF
		END_FOR		
		
		// Second Stations logic
		IF allMoversAtSecond THEN
			StationTimer[0]( IN := TRUE, PT := T#1000MS );
			
			IF StationTimer[0].Q THEN
				StationTimer[0]( IN := FALSE );
				
				// Dwell complete, release all shuttles
				
				FOR i := 0 TO 7 DO
					Station[i].CurrentMover.MotionParameters	:= TravelParSet;
					Station[i].CurrentMover.MoveToStation( Station[i+8] );
				END_FOR
			END_IF
		END_IF
		
		
		

		
		
		
		

		// todo needs to be test, add groupstop
		IF bCommandEnable = FALSE THEN
			MainState			:= 50;
		END_IF
		
	50: // -------------------------------------------- Disabling
	
		FOR i := 0 TO GVL.NUM_MOVERS-1 DO
			Mover[i].Enable		:= FALSE;
		END_FOR 
		MainState				:= 0;		
		
END_CASE;



// Call all mover function blocks cyclically
FOR i := 0 TO GVL.NUM_MOVERS-1 DO
	Mover[i]( GroupReference := GroupRef );
END_FOR;

// Call all station function blocks cyclically
FOR i := 0 TO GVL.NUM_STATIONS-1 DO
	Station[i].Cyclic();
END_FOR]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="2725" Count="0" />
      <LineId Id="708" Count="2" />
      <LineId Id="1457" Count="0" />
      <LineId Id="712" Count="2" />
      <LineId Id="2624" Count="2" />
      <LineId Id="2805" Count="0" />
      <LineId Id="2810" Count="3" />
      <LineId Id="2816" Count="0" />
      <LineId Id="3023" Count="2" />
      <LineId Id="2817" Count="3" />
      <LineId Id="2961" Count="0" />
      <LineId Id="2832" Count="0" />
      <LineId Id="3027" Count="1" />
      <LineId Id="2964" Count="1" />
      <LineId Id="2680" Count="0" />
      <LineId Id="2632" Count="0" />
      <LineId Id="715" Count="2" />
      <LineId Id="1436" Count="0" />
      <LineId Id="718" Count="5" />
      <LineId Id="1528" Count="0" />
      <LineId Id="725" Count="5" />
      <LineId Id="3076" Count="0" />
      <LineId Id="3030" Count="0" />
      <LineId Id="3075" Count="0" />
      <LineId Id="1805" Count="0" />
      <LineId Id="1433" Count="0" />
      <LineId Id="1422" Count="0" />
      <LineId Id="2969" Count="0" />
      <LineId Id="3077" Count="0" />
      <LineId Id="3031" Count="0" />
      <LineId Id="2970" Count="4" />
      <LineId Id="3078" Count="0" />
      <LineId Id="3032" Count="0" />
      <LineId Id="2975" Count="3" />
      <LineId Id="1435" Count="0" />
      <LineId Id="731" Count="2" />
      <LineId Id="2537" Count="0" />
      <LineId Id="734" Count="0" />
      <LineId Id="743" Count="1" />
      <LineId Id="2525" Count="0" />
      <LineId Id="2527" Count="5" />
      <LineId Id="2524" Count="0" />
      <LineId Id="2376" Count="1" />
      <LineId Id="2385" Count="0" />
      <LineId Id="2395" Count="0" />
      <LineId Id="2834" Count="0" />
      <LineId Id="2849" Count="0" />
      <LineId Id="2852" Count="0" />
      <LineId Id="2854" Count="4" />
      <LineId Id="2851" Count="0" />
      <LineId Id="2835" Count="0" />
      <LineId Id="2884" Count="1" />
      <LineId Id="2892" Count="0" />
      <LineId Id="2896" Count="0" />
      <LineId Id="2900" Count="0" />
      <LineId Id="2899" Count="0" />
      <LineId Id="2897" Count="0" />
      <LineId Id="2907" Count="0" />
      <LineId Id="2909" Count="0" />
      <LineId Id="2927" Count="0" />
      <LineId Id="2931" Count="0" />
      <LineId Id="2933" Count="2" />
      <LineId Id="2937" Count="1" />
      <LineId Id="2941" Count="1" />
      <LineId Id="2980" Count="0" />
      <LineId Id="2943" Count="1" />
      <LineId Id="2940" Count="0" />
      <LineId Id="2936" Count="0" />
      <LineId Id="2932" Count="0" />
      <LineId Id="2915" Count="0" />
      <LineId Id="2893" Count="0" />
      <LineId Id="2906" Count="0" />
      <LineId Id="2888" Count="0" />
      <LineId Id="2890" Count="0" />
      <LineId Id="2901" Count="0" />
      <LineId Id="2903" Count="1" />
      <LineId Id="2902" Count="0" />
      <LineId Id="2876" Count="0" />
      <LineId Id="2917" Count="0" />
      <LineId Id="2945" Count="0" />
      <LineId Id="2949" Count="0" />
      <LineId Id="2951" Count="2" />
      <LineId Id="2955" Count="3" />
      <LineId Id="2981" Count="0" />
      <LineId Id="2959" Count="1" />
      <LineId Id="2954" Count="0" />
      <LineId Id="2950" Count="0" />
      <LineId Id="2946" Count="0" />
      <LineId Id="2878" Count="0" />
      <LineId Id="2836" Count="0" />
      <LineId Id="2839" Count="2" />
      <LineId Id="2384" Count="0" />
      <LineId Id="1908" Count="0" />
      <LineId Id="1968" Count="0" />
      <LineId Id="1909" Count="0" />
      <LineId Id="1415" Count="2" />
      <LineId Id="758" Count="1" />
      <LineId Id="1418" Count="0" />
      <LineId Id="1438" Count="1" />
      <LineId Id="1455" Count="0" />
      <LineId Id="1454" Count="0" />
      <LineId Id="760" Count="1" />
      <LineId Id="2547" Count="0" />
      <LineId Id="2546" Count="0" />
      <LineId Id="763" Count="4" />
      <LineId Id="2548" Count="0" />
      <LineId Id="878" Count="1" />
      <LineId Id="881" Count="0" />
      <LineId Id="592" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>