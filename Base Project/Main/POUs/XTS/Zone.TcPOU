<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="Zone" Id="{de9b5dde-c203-4f4d-abe0-431568995536}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'hide_all_local'}
FUNCTION_BLOCK Zone EXTENDS Objective
VAR

	internalStartPosition	: LREAL;
	internalEndPosition		: LREAL;
	internalDirection		: Tc2_MC2.MC_Direction;

	internalMoverList		: MoverList;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{c12d9132-64a8-40b2-b1d9-3d115c20d531}" />
    <Folder Name="Properties" Id="{90c52b3d-9a13-4439-896a-3c5f735e1216}" />
    <Property Name="CurrentMoverList" Id="{fba40b8e-82e6-48ba-a30f-3cc9abb7a1fc}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY CurrentMoverList : iMoverList]]></Declaration>
      <Get Name="Get" Id="{9681b7d1-44db-47ce-812f-f41b5199fc2d}">
        <Declaration><![CDATA[VAR
	i		: USINT;
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[

internalMoverList.UnregisterAll();

FOR i := 0 TO SIZEOF( TrackedMovers ) / SIZEOF( internalTrackedMovers[0] ) - 1 DO
	IF internalTrackedMovers[i] <> 0 THEN

		IF internalStartPosition < internalEndPosition AND
			internalTrackedMovers[i]^.AxisReference.NcToPlc.ModuloActPos > internalStartPosition AND
			internalTrackedMovers[i]^.AxisReference.NcToPlc.ModuloActPos < internalEndPosition THEN
			// Zone does NOT contain the rollover point, and DOES contain the mover

			internalMoverList.RegisterMover( internalTrackedMovers[i]^ );

		ELSIF internalStartPosition > internalEndPosition AND
			( internalTrackedMovers[i]^.AxisReference.NcToPlc.ModuloActPos > internalStartPosition OR
			internalTrackedMovers[i]^.AxisReference.NcToPlc.ModuloActPos < internalEndPosition ) THEN
			// Zone DOES contain the rollover point, and DOES contain the mover

			internalMoverList.RegisterMover( internalTrackedMovers[i]^ );

		ELSE
			// Either the zone doesn't contain this mover,
			// Or the StartPosition and EndPosition are coincident. Either way, add no movers
		END_IF


	END_IF
END_FOR


CurrentMoverList	:= internalMoverList;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="EndPosition" Id="{0a5f097e-96c3-43a1-b536-04f368f24ca3}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY EndPosition : LREAL]]></Declaration>
      <Get Name="Get" Id="{a512e404-14bd-4b1c-9731-3bba7de351df}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[

EndPosition		:= internalEndPosition;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{5303700b-9c9b-41e5-8b19-d6050a760e26}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[

// todo add limit checks?
internalEndPosition		:= EndPosition;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="StartPosition" Id="{aacc7e02-3b0c-44c1-b85c-a6193164623c}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY StartPosition : LREAL]]></Declaration>
      <Get Name="Get" Id="{3c066f4a-ee41-4a60-96e5-d5b56be91452}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[

StartPosition	:= internalStartPosition;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{c038cebd-9252-42ab-8a7b-34fa884ebed1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[
// Todo add limit checks?
internalStartPosition	:= StartPosition;
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="ZoneLength" Id="{cc1fdc68-29d3-4f91-948b-3fe78f7d05d8}" FolderPath="Properties\">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ZoneLength : LREAL]]></Declaration>
      <Get Name="Get" Id="{6d92c621-884a-4d2c-8ab0-83911c1e9108}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[


IF internalStartPosition < internalEndPosition THEN
	// Zone does NOT include the rollover point
	ZoneLength 		:= internalEndPosition - internalStartPosition;
ELSIF internalStartPosition > internalEndPosition THEN
	// Zone DOES include the rollover point
	ZoneLength		:= internalEndPosition + ( internalEndPosition + GVL.TRACK_LENGTH - internalStartPosition );
ELSE
	// Start and end position are coincident, ZL is 0
	ZoneLength	:= 0;
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <LineIds Name="Zone">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="Zone.CurrentMoverList.Get">
      <LineId Id="6" Count="31" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Zone.EndPosition.Get">
      <LineId Id="5" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Zone.EndPosition.Set">
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Zone.StartPosition.Get">
      <LineId Id="5" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Zone.StartPosition.Set">
      <LineId Id="7" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="Zone.ZoneLength.Get">
      <LineId Id="6" Count="2" />
      <LineId Id="2" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="14" Count="2" />
      <LineId Id="10" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>