<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="Objective" Id="{72371872-54aa-4f25-a82d-ba585015a7c5}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'reflection'}
FUNCTION_BLOCK ABSTRACT Objective IMPLEMENTS iObjective
VAR_INPUT
END_VAR
VAR
	
	TrackedMovers				: ARRAY [0..GVL.NUM_MOVERS-1] OF POINTER TO Mover;
	
	{attribute 'hide'}
	internalTrackedMoverCount	: USINT;

END_VAR
VAR_OUTPUT
		
	{attribute 'instance-path'}
	{attribute 'noinit'}
	{attribute 'hide'}
	InstancePath		: STRING;		// Unique variable path of the instance
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{4ed72c29-121a-4b01-8ee9-80f4e3e37fcf}" />
    <Folder Name="Properties" Id="{a322a947-e1f7-42e0-b1f3-cb1cbcbf3e25}" />
    <Property Name="CurrentMover" Id="{4feba114-ceeb-415c-98a7-1402e575faa6}" FolderPath="Properties\">
      <Declaration><![CDATA[{attribute 'monitoring' := 'variable'}
PROPERTY CurrentMover : REFERENCE TO Mover]]></Declaration>
      <Get Name="Get" Id="{96570177-6e74-4914-9114-5f2abd4c76ad}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="RegisterMover" Id="{8354cf16-6187-4fe4-976a-42e2fe3b8399}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD RegisterMover : BOOL
VAR_INPUT	
	NewMover		: REFERENCE TO Mover;
END_VAR

VAR
	i				: USINT;
	duplicateFound	: BOOL;
	emptyIDX		: USINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
(*
	Add a mover to a list of movers tracked by the objective.
	Movers can't be added multiple times, so check for duplicates
	Movers can't overwrite others in the list, so check that the array element is clear
*)

//	IF NewMover <> 0 THEN				// validate pointer
IF __ISVALIDREF( NewMover ) THEN
	
	duplicateFound		:= FALSE;		// default to false, counterexample below
	internalTrackedMoverCount	:= 0;			// reset to zero, incremented below

	FOR i := 0 TO SIZEOF(TrackedMovers)/SIZEOF(TrackedMovers[i])-1 DO
		IF TrackedMovers[i] <> 0 THEN			
			IF ADR( NewMover ) = TrackedMovers[i] THEN
				duplicateFound	:= TRUE;				// this mover already tracked
			END_IF			
			internalTrackedMoverCount	:= internalTrackedMoverCount + 1;
		ELSE
			emptyIDX			:= i;					// confirmed open array element
		END_IF
	END_FOR

	IF duplicateFound = FALSE THEN
		TrackedMovers[emptyIDX]		:= ADR( NewMover );		// new mover goes into open array element
		internalTrackedMoverCount			:= internalTrackedMoverCount + 1;
	END_IF

ELSE
	ADSLOGSTR(ADSLOG_MSGTYPE_LOG,'Error: Mover input is invalid','');
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="UnregisterCurrent" Id="{f5252866-1ebe-4ec3-aeab-827236ab79ab}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD UnregisterCurrent : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[

THIS^.UnregisterMover( CurrentMover );]]></ST>
      </Implementation>
    </Method>
    <Method Name="UnregisterMover" Id="{18c8f6fd-1567-45b0-85d6-dc2464792b83}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD UnregisterMover : BOOL
VAR_INPUT
	RemovingMover		: REFERENCE TO Mover;
END_VAR
VAR
	i					: USINT;
	duplicateFound		: BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[

(*
	Remove a mover to a list of movers tracked by the objective.
	Only movers in the list can be removed, otherwise nothing happens
*)


//	IF RemovingMover <> 0 THEN			// validate pointer
IF __ISVALIDREF( RemovingMover ) THEN
	
	internalTrackedMoverCount	:= 0;
	
	FOR i := 0 TO SIZEOF( TrackedMovers )/SIZEOF( TrackedMovers[0] )-1 DO
		IF TrackedMovers[i] <> 0 THEN	// validate pointer
					
			internalTrackedMoverCount		:= internalTrackedMoverCount + 1;
			
			IF ADR( RemovingMover ) = TrackedMovers[i] THEN
				TrackedMovers[i]	:= 0;		// remove the pointer
				internalTrackedMoverCount	:= internalTrackedMoverCount - 1;
			END_IF
		
		END_IF
	END_FOR

ELSE
	ADSLOGSTR(ADSLOG_MSGTYPE_LOG,'Error: Mover input is invalid','');
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="Objective">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="Objective.CurrentMover.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Objective.RegisterMover">
      <LineId Id="54" Count="4" />
      <LineId Id="53" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="41" Count="1" />
      <LineId Id="44" Count="3" />
      <LineId Id="38" Count="0" />
      <LineId Id="27" Count="1" />
      <LineId Id="49" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="23" Count="0" />
    </LineIds>
    <LineIds Name="Objective.UnregisterCurrent">
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Objective.UnregisterMover">
      <LineId Id="31" Count="0" />
      <LineId Id="34" Count="2" />
      <LineId Id="38" Count="0" />
      <LineId Id="32" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="17" Count="2" />
      <LineId Id="40" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="26" Count="2" />
      <LineId Id="30" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>